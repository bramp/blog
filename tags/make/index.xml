<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Make on bramp.net</title>
    <link>http://bramp.net/blog/tags/make/</link>
    <description>Recent content in Make on bramp.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sun, 09 Sep 2012 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://bramp.net/blog/tags/make/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Using Make to parallelise a task</title>
      <link>http://bramp.net/blog/2012/09/09/using-make-to-parallelise-a-task/</link>
      <pubDate>Sun, 09 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>http://bramp.net/blog/2012/09/09/using-make-to-parallelise-a-task/</guid>
      <description>&lt;p&gt;I needed to run a CPU intensive script over a directory of files. Each file would be run independently, and I was using bash to achieve this:&lt;/p&gt;

&lt;pre&gt;for $i in *.txt; do ./script $i; done&lt;/pre&gt;

&lt;p&gt;This works fine, however, I have a quad core machine, and this task was CPU bound on one core. So I thought about parallelising this task so the script would run on four files at once. I didn&amp;#8217;t want to get into the nitty gritty of changing the script to cope in this way, so instead, I &amp;#8220;abused&amp;#8221; Make to do this.&lt;/p&gt;

&lt;p&gt;I created a file named &amp;#8220;Makefile&amp;#8221; with the following:&lt;/p&gt;

&lt;pre&gt;FILES=$(shell ls *.txt)

#default target of everything
all: $(FILES)

$(FILES):
    ./script $@

.PHONY: all $(FILES)&lt;/pre&gt;

&lt;p&gt;then you just run &lt;code&gt;make -j4&lt;/code&gt;, and four instances of the script will start running, with the concurrency being handled by Make. You can also now type &lt;code&gt;make a.txt b.txt c.txt&lt;/code&gt; and it&amp;#8217;ll just run the script on those three files.&lt;/p&gt;

&lt;p&gt;You can also extend this Makefile to handle dependencies, such as running a script before all the others. Make is pretty powerful, and should be considered for more than just compiling programs.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>