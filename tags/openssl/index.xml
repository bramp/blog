<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Openssl on bramp.net</title>
    <link>http://bramp.net/blog/tags/openssl/</link>
    <description>Recent content in Openssl on bramp.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sat, 16 Aug 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://bramp.net/blog/tags/openssl/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Grabbing a Certificate with OpenSSL and importing it into Java</title>
      <link>http://bramp.net/blog/2014/08/16/grabbing-a-certificate-with-openssl-and-importing-it-into-java/</link>
      <pubDate>Sat, 16 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://bramp.net/blog/2014/08/16/grabbing-a-certificate-with-openssl-and-importing-it-into-java/</guid>
      <description>&lt;p&gt;Occasionally I have to grab a SSL cert from a server, and turn it into something that Java can use. Here are the quick instructions&lt;/p&gt;

&lt;pre class=&#34;prettyprint&#34;&gt;# Store the cert issued by a web server
openssl s_client -showcerts -connect www.google.com:443 &amp;gt; www.google.com.pem

# Convert it from PEM format to DER format
openssl x509 -in www.google.com.pem -inform PEM -out www.google.com.der -outform DER

# Import it into your keystore
sudo /usr/java6/bin/keytool -import -alias www.google.com -file www.google.com.der -keystore /usr/java6/jre/lib/security/cacerts

# The keystore password is by default &#34;changeit&#34;
&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>