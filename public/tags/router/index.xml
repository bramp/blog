<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Router on bramp.net</title>
    <link>https://blog.bramp.net</link>
    <description>Recent content in Router on bramp.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en_GB</language>
    <atom:link href="https://blog.bramp.net/tags/router/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Obtaining the firmware for Linksys E4200v2</title>
      <link>https://blog.bramp.net/post/2012/01/22/obtaining-the-firmware-for-linksys-e4200v2/</link>
      <pubDate>Sun, 22 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://blog.bramp.net/post/2012/01/22/obtaining-the-firmware-for-linksys-e4200v2/</guid>
      <description>&lt;p&gt;I recently got a Linksys E4200v2 wireless router. It&amp;#8217;s pretty cool, supports IPv6, 2.4Ghz and 5Ghz wifi networks, VPN, etc. The one downside is that the firmware for the router is not available from &lt;a href=&#34;http://homesupport.cisco.com/en-us/wireless/linksys/E4200&#34;&gt;Linksys&amp;#8217;s website&lt;/a&gt;, and the &lt;a href=&#34;http://homesupport.cisco.com/en-us/gplcodecenter&#34;&gt;GPL code&lt;/a&gt; has not been made available, yet&amp;#8230; However, the router has been able to pull updates itself from the Internet.&lt;/p&gt;

&lt;p&gt;So I wanted to acquire the firmware to see if I could do something fun with the router. I set about to figure out how the router does this. My plan was to set my laptop up between Internet interface on the router, and the cable modem. Since my laptop doesn&amp;#8217;t have two network cards, I plugged into a switch and used &lt;a href=&#34;http://ettercap.sourceforge.net/&#34;&gt;Ethercap&lt;/a&gt; to ARP poison to redirect traffic via the laptop.&lt;/p&gt;

&lt;p&gt;Then using &lt;a href=&#34;http://www.wireshark.org/&#34;&gt;Wireshark&lt;/a&gt; I could see the traffic coming out of the router. All I needed to do now was to hit the &amp;#8220;check for updates button&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Firstly I saw two DNS requests, one for the AAAA (IPv6) record for update.linksys.com, then a A request for update.linksys.com. Clearly the updates are coming from there. Secondly I saw a HTTPS connection form to that domain. That makes this a little more complex, as I am unable to see the encrypted traffic, and thus see what is being transferred.&lt;/p&gt;

&lt;p&gt;So, I grabbed a &lt;a href=&#34;http://code.activestate.com/recipes/491264-mini-fake-dns-server/&#34;&gt;simple DNS server&lt;/a&gt;, and set up a simple SSL server following &lt;a href=&#34;http://wirewatcher.wordpress.com/2010/07/20/decrypting-ssl-traffic-with-wireshark-and-ways-to-prevent-it/&#34;&gt;these instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now with DNS spoofing, and a fake SSL server, I could intercept encrypted traffic from the router, as long as it does not validate the SSL certificate. Luckily it didn&amp;#8217;t check the validity, and thus I was able to capture the request: (BTW Not checking the cert completely defeats the point of using SSL&amp;#8230; bad Linksys!).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span class=&#34;nf&#34;&gt;POST&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;/cds/update&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;HTTP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1.1&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l&#34;&gt;update.linksys.com&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;Accept&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l&#34;&gt;*/*&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;Content-Type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l&#34;&gt;text/xml&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;Content-Length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l&#34;&gt;573&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;SOAP-ENV:Envelope&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:SOAP-ENV=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;SOAP-ENV:Header/&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;SOAP-ENV:Body&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;ns:GetFirmwareFromDeviceRequest&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:ns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://cisco.com/schemas&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;ns:LanguageCode&amp;gt;&lt;/span&gt;en&lt;span class=&#34;nt&#34;&gt;&amp;lt;/ns:LanguageCode&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;ns:CountryCode&amp;gt;&lt;/span&gt;us&lt;span class=&#34;nt&#34;&gt;&amp;lt;/ns:CountryCode&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;ns:MacAddress&amp;gt;&lt;/span&gt;12:34:56:78:90:ab&lt;span class=&#34;nt&#34;&gt;&amp;lt;/ns:MacAddress&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;ns:ModelNo&amp;gt;&lt;/span&gt;E4200&lt;span class=&#34;nt&#34;&gt;&amp;lt;/ns:ModelNo&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;ns:HardwareVersion&amp;gt;&lt;/span&gt;2&lt;span class=&#34;nt&#34;&gt;&amp;lt;/ns:HardwareVersion&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;ns:CurrentFirmwareVersion&amp;gt;&lt;/span&gt;2.0.36.126507&lt;span class=&#34;nt&#34;&gt;&amp;lt;/ns:CurrentFirmwareVersion&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ns:GetFirmwareFromDeviceRequest&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/SOAP-ENV:Body&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/SOAP-ENV:Envelope&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and the response:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span class=&#34;kr&#34;&gt;HTTP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1.1&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;200&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;OK&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;Content-Language&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l&#34;&gt;en-US&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;Content-Type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l&#34;&gt;text/xml&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;SOAPAction&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;soapenv:Envelope&lt;/span&gt;
 &lt;span class=&#34;na&#34;&gt;xmlns:soapenv=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot;&lt;/span&gt;
 &lt;span class=&#34;na&#34;&gt;xmlns:soapenc=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://schemas.xmlsoap.org/soap/encoding/&amp;quot;&lt;/span&gt;
 &lt;span class=&#34;na&#34;&gt;xmlns:xsd=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot;&lt;/span&gt;
 &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;soapenv:Header/&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;soapenv:Body&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;ns:GetFirmwareFromDeviceResponse&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:ns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://cisco.com/schemas&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;ns:FirmwareList&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:ns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://cisco.com/schemas&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;ns:Firmware&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:ns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://cisco.com/schemas&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;ns:Version&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:ns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://cisco.com/schemas&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;2.0.36.126507&lt;span class=&#34;nt&#34;&gt;&amp;lt;/ns:Version&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;ns:Revision&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:ns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://cisco.com/schemas&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;D&lt;span class=&#34;nt&#34;&gt;&amp;lt;/ns:Revision&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;ns:ReleaseDate&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:ns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://cisco.com/schemas&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;2012-01-06T16:48:08Z&lt;span class=&#34;nt&#34;&gt;&amp;lt;/ns:ReleaseDate&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;ns:DownloadURI&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:ns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://cisco.com/schemas&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;http://download.linksys.com/updates/to0037258865.pdx/FW_E4200_2.0.36.126507.SSA&lt;span class=&#34;nt&#34;&gt;&amp;lt;/ns:DownloadURI&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;ns:DateFormat&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:ns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://cisco.com/schemas&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;yyyy-MM-dd&amp;#39;;T&amp;#39;;HH:mm:ss&amp;#39;;Z&amp;#39;;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/ns:DateFormat&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;ns:Checksum&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:ns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://cisco.com/schemas&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;1958710861&lt;span class=&#34;nt&#34;&gt;&amp;lt;/ns:Checksum&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ns:Firmware&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ns:FirmwareList&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ns:GetFirmwareFromDeviceResponse&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/soapenv:Body&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/soapenv:Envelope&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(I slightly modified portions of the request and response to hide the identify of my router.).&lt;/p&gt;

&lt;p&gt;I might write a script to make fake requests, but until then you can easily create a request with curl:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -d @request.raw https://update.linksys.com/cds/update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then you just extract the DownloadURI and&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl http://download.linksys.com/updates/to0037258865.pdx/FW_E4200_2.0.36.126507.SSA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Voila I now have the firmware. Now I need to figure out what to do with it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: As requested I fetched the more recent version of the file:&lt;br /&gt;
2.0.37.131047 &amp;#8211; &lt;a href=&#34;http://download.linksys.com/updates/to0040829450.pdx/FW_E4200_2.0.37.131047.SSA&#34;&gt;http://download.linksys.com/updates/to0040829450.pdx/FW_E4200_2.0.37.131047.SSA&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Verizon FiOS MI424WR rev. F Router</title>
      <link>https://blog.bramp.net/post/2010/11/25/verizon-fios-mi424wr-rev.-f-router/</link>
      <pubDate>Thu, 25 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://blog.bramp.net/post/2010/11/25/verizon-fios-mi424wr-rev.-f-router/</guid>
      <description>&lt;p&gt;I just got a FiOS wifi router and I must say I really like it. The web interface has many more options than any home router I&amp;#8217;ve ever played with, and it seems like it&amp;#8217;d be easy for a beginner but doesn&amp;#8217;t get in the way of an expert. It also telnet access (optionally over SSL), which puts you into a custom shell. Poking around the commands I find one awesome one:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Wireless Broadband Router&amp;gt; &lt;span class=&#34;nb&#34;&gt;help &lt;/span&gt;system shell
shell   Spawn busybox shell in foreground

Wireless Broadband Router&amp;gt; system shell
BusyBox v1.01 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;2005.09.07-07:38+0000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; Built-in shell &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;lash&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
Enter &lt;span class=&#34;s1&#34;&gt;&amp;#39;help&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; a list of built-in commands.

/ &lt;span class=&#34;c&#34;&gt;# &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is very clearly running Linux, with BusyBox. For those interested here are some interesting bits of information:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;/ &lt;span class=&#34;c&#34;&gt;# cat /proc/version &lt;/span&gt;
Linux version 2.6.16.14 &lt;span class=&#34;c&#34;&gt;#1 SMP Sat Nov 28 00:38:50 PST 2009&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A four year old kernel. Well what do you expect from this kind of device :)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;/ &lt;span class=&#34;c&#34;&gt;# cat /proc/cpuinfo &lt;/span&gt;
system &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;     : MC524WR
processor       : 0
cpu model       : Cavium Networks Octeon CN50XX V0.1
BogoMIPS        : 1000.48
&lt;span class=&#34;nb&#34;&gt;wait &lt;/span&gt;instruction    : yes
microsecond timers  : yes
tlb_entries     : 64
extra interrupt vector  : yes
hardware watchpoint : yes
ASEs implemented    :
VCED exceptions     : not available
VCEI exceptions     : not available
processor       : 1
cpu model       : Cavium Networks Octeon CN50XX V0.1
BogoMIPS        : 1000.48
&lt;span class=&#34;nb&#34;&gt;wait &lt;/span&gt;instruction    : yes
microsecond timers  : yes
tlb_entries     : 64
extra interrupt vector  : yes
hardware watchpoint : yes
ASEs implemented    :
VCED exceptions     : not available
VCEI exceptions     : not available
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;w00t, a &lt;a href=&#34;http://www.caviumnetworks.com/OCTEON-Plus_CN50XX.html&#34;&gt;Dual Cores 64bit MIPS chip&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;/ &lt;span class=&#34;c&#34;&gt;# cat /proc/meminfo &lt;/span&gt;
MemTotal:        &lt;span class=&#34;m&#34;&gt;53200&lt;/span&gt; kB
MemFree:         &lt;span class=&#34;m&#34;&gt;11588&lt;/span&gt; kB
Buffers:          &lt;span class=&#34;m&#34;&gt;9252&lt;/span&gt; kB
Cached:           &lt;span class=&#34;m&#34;&gt;9228&lt;/span&gt; kB
SwapCached:          &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; kB
Active:           &lt;span class=&#34;m&#34;&gt;7796&lt;/span&gt; kB
Inactive:        &lt;span class=&#34;m&#34;&gt;16220&lt;/span&gt; kB
HighTotal:           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; kB
HighFree:            &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; kB
LowTotal:        &lt;span class=&#34;m&#34;&gt;53200&lt;/span&gt; kB
LowFree:         &lt;span class=&#34;m&#34;&gt;11588&lt;/span&gt; kB
SwapTotal:           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; kB
SwapFree:            &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; kB
Dirty:               &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; kB
Writeback:           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; kB
Mapped:          &lt;span class=&#34;m&#34;&gt;11272&lt;/span&gt; kB
Slab:            &lt;span class=&#34;m&#34;&gt;13700&lt;/span&gt; kB
CommitLimit:     &lt;span class=&#34;m&#34;&gt;26600&lt;/span&gt; kB
Committed_AS:    &lt;span class=&#34;m&#34;&gt;11384&lt;/span&gt; kB
PageTables:        &lt;span class=&#34;m&#34;&gt;196&lt;/span&gt; kB
VmallocTotal: &lt;span class=&#34;m&#34;&gt;1073741824&lt;/span&gt; kB
VmallocUsed:      &lt;span class=&#34;m&#34;&gt;2752&lt;/span&gt; kB
VmallocChunk: &lt;span class=&#34;m&#34;&gt;1073738692&lt;/span&gt; kB
HugePages_Total:     0
HugePages_Free:      0
Hugepagesize:     &lt;span class=&#34;m&#34;&gt;2048&lt;/span&gt; kB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Only ~53MB of RAM if I&amp;#8217;m reading that right. Seems most likely to be 64MB to me, but I will investigate further.&lt;/p&gt;

&lt;p&gt;Also, as this is Linux, the &lt;a href=&#34;http://opensource.actiontec.com/&#34;&gt;source code&lt;/a&gt; has been made available. The &lt;a href=&#34;http://opensource.actiontec.com/sourcecode/mi424wr/rev_ef/mi424wr-fw-20.10.7.5_readme&#34;&gt;README&lt;/a&gt; reveals it is a MC524 Router (MI424WR-GEN2 REV E/F).&lt;/p&gt;

&lt;p&gt;The device doesn&amp;#8217;t seem to have many of the standard Linux tools, no doubt to save space. It does however have an external USB port. My plan is to compile more of busybox, as well as some other binaries, and run them from an external USB stick.&lt;/p&gt;

&lt;p&gt;Hacking an router has never been so easy! I&amp;#8217;ll post more when I know more!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>