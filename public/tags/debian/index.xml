<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Debian on bramp.net</title>
    <link>http://bramp.net/blog/tags/debian/</link>
    <description>Recent content in Debian on bramp.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sun, 15 Apr 2012 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://bramp.net/blog/tags/debian/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>LaTeX Error: File `layaureo.sty’ not found</title>
      <link>http://bramp.net/blog/2012/04/15/latex-error-file-layaureo.sty-not-found/</link>
      <pubDate>Sun, 15 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>http://bramp.net/blog/2012/04/15/latex-error-file-layaureo.sty-not-found/</guid>
      <description>&lt;p&gt;I was getting the error &lt;code&gt;./cv.tex:11: LaTeX Error: File `layaureo.sty&#39; not found.&lt;/code&gt; when trying to compile an &lt;a href=&#34;https://github.com/bramp/curriculum-vitae&#34; title=&#34;Curriculum Vitae latex project&#34;&gt;old tex document&lt;/a&gt; of mine.&lt;/p&gt;

&lt;p&gt;It seems layaureo is missing from &lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live&#34;&gt;TexLive&lt;/a&gt; 2009, the default on Debian at the moment (even though it&amp;#8217;s 2012 now!). So I had to install TexLive 2011 from Debian Unstable using [Apt Pinning][3] to fix this problem.&lt;/p&gt;

&lt;p&gt;Once TexLive 2011 is installed &lt;code&gt;apt-get install -t unstable texlive-lang-italian&lt;/code&gt; to bring in the layaureo package.&lt;/p&gt;

&lt;p&gt;I also encountered the following problems that was easier to resolve:&lt;/p&gt;

&lt;pre&gt;LaTeX Error: File `marvosym.sty&#39; not found. solution: &lt;code&gt;apt-get install texlive-fonts-recommended&lt;/code&gt;
LaTeX Error: File `fullpage.sty&#39; not found. solution: &lt;code&gt;apt-get install texlive-latex-extra&lt;/code&gt;
LaTeX Error: File `multibib.sty&#39; not found. solution: &lt;code&gt;apt-get install texlive-bibtex-extra&lt;/code&gt;
LaTeX Error: File `algorithm.sty&#39; not found. solution: &lt;code&gt;apt-get install texlive-science&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;[3]: &lt;a href=&#34;http://wiki.debian.org/AptPreferences&#34;&gt;http://wiki.debian.org/AptPreferences&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Building PHP’s Debian package nightmare</title>
      <link>http://bramp.net/blog/2011/11/22/building-phps-debian-package-nightmare/</link>
      <pubDate>Tue, 22 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>http://bramp.net/blog/2011/11/22/building-phps-debian-package-nightmare/</guid>
      <description>&lt;p&gt;I just tried to compile the Debian PHP packages, so I could make some &lt;a href=&#34;http://www.howtoforge.com/recompiling-php5-with-bundled-support-for-gd-on-ubuntu&#34;&gt;minor tweaks&lt;/a&gt; to the source, to fix a bug I&amp;#8217;m hopefully going to document shortly. This turned out to be very problematic, mainly due to the testing phase!&lt;/p&gt;

&lt;p&gt;To build the Debian packages you typically do the following:&lt;/p&gt;

&lt;pre class=&#34;prettyprint&#34;&gt;mkdir php
cd php
apt-get source php5
cd php5-*
debuild -us -uc -j4
&lt;/pre&gt;

&lt;p&gt;While testing, the debian/setup_mysql.sh script is called, to create a temporary MySQL database. This however failed to execute correctly because I had some custom options in my [~/.my.cnf][2]. Thus it failed like so:&lt;/p&gt;

&lt;pre&gt;# start our own mysql server for the tests
/bin/sh debian/setup-mysql.sh 1029 /home/bramp/vendor/php/php5-5.3.8.0/mysql_db
mysqladmin: connect to server at &#39;localhost&#39; failed
error: &#39;Access denied for user &#39;root&#39;@&#39;localhost&#39; (using password: YES)&#39;
make: *** [test-results.txt] Error 1
dpkg-buildpackage: error: debian/rules build gave error exit status 2
debuild: fatal error at line 1348:
dpkg-buildpackage -rfakeroot -D -us -uc -j8 failed
&lt;/pre&gt;

&lt;p&gt;After removing the my.cnf things were ok. The below patch fixes it in a more general way:&lt;/p&gt;

&lt;pre class=&#34;prettyprint&#34;&gt;--- debian/setup-mysql.sh.org  2011-11-21 21:57:07.244481175 -0500
+++ debian/setup-mysql.sh   2011-11-21 21:40:39.384455880 -0500
@@ -16,7 +16,7 @@
 
 socket=$datadir/mysql.sock
 # Commands:
-mysqladmin=&#34;mysqladmin -u root -P $port -h localhost --socket=$socket&#34;
+mysqladmin=&#34;mysqladmin --no-defaults -u root -P $port -h localhost --socket=$socket&#34;
 mysqld=&#34;/usr/sbin/mysqld --no-defaults --bind-address=localhost --port=$port --socket=$socket --datadir=$datadir&#34;
 
 # Main code #
&lt;/pre&gt;

&lt;p&gt;The next problem I encountered is that all the automated PHP unit tests were failing, and they would eventually get stuck and use all my RAM and swap space (at least 16GiB of it) &lt;img src=&#34;http://bramp.net/blog/wp-includes/images/smilies/icon_sad.gif&#34; alt=&#34;:(&#34; class=&#34;wp-smiley&#34; /&gt; I&amp;#8217;m not sure what made the machine run out of RAM, but the tests were failing because the version of PHP that was running the tests was incorrectly loading extensions from my system. The quick fix for this was to disable any extensions I had installed to my system. I just&lt;/p&gt;

&lt;pre&gt;sudo mv /etc/php5/conf.d /etc/php5/conf.d.tmp&lt;/pre&gt;

&lt;p&gt;to do that.&lt;/p&gt;

&lt;p&gt;This made me think that in future I should perhaps find a cleaner environment to build these packages. In fact, it makes me wonder if the builds are just broken if my environment clearly impacts the successful run of tests.&lt;/p&gt;

&lt;p&gt;One trick I found while building again and again, is that you can pass &amp;#8220;-nc&amp;#8221; to debuild so that it does not clean, and thus reuses the existing build materials for a faster build. Either way, I now have my own version of PHP built and installed! Next time I might just ignore the .deb files and build direct from source.&lt;/p&gt;

&lt;p&gt;[2]: &lt;a href=&#34;http://dev.mysql.com/doc/refman/5.1/en/option-files.html&#34;&gt;http://dev.mysql.com/doc/refman/5.1/en/option-files.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Grub2 and Windows</title>
      <link>http://bramp.net/blog/2009/09/10/grub2-and-windows/</link>
      <pubDate>Thu, 10 Sep 2009 00:00:00 +0000</pubDate>
      
      <guid>http://bramp.net/blog/2009/09/10/grub2-and-windows/</guid>
      <description>&lt;p&gt;I&amp;#8217;ve just installed grub2 on my Debian laptop, and I wanted to write a quick note on how to get dual booting working. Grub2 seems to have a far more complex configuration system than grub, this may be a good or a bad thing. One feature of this is a /etc/grub.d directory which contains a set of scripts to configure what items should be listed on the boot menu.&lt;/p&gt;

&lt;pre&gt;bramp@Andrew-laptop:~$ ls /etc/grub.d/
00_header  05_debian_theme  10_linux  30_os-prober  40_custom  README
&lt;/pre&gt;

&lt;p&gt;The scripts get run in order, each adding features to the boot menu. To dual boot Windows you can acheive this in two ways.&lt;br /&gt;
1) Write a script which manual adds windows&lt;br /&gt;
2) Use the os-prober script.&lt;/p&gt;

&lt;p&gt;I opted for option 2 since it seemed the easiest. However, this os-prober script does not work unless the package os-prober is installed. So:&lt;/p&gt;

&lt;pre&gt;bramp@Andrew-laptop:~$ sudo apt-get install os-prober
&lt;/pre&gt;

&lt;p&gt;Once that is installed you can reconfigure grub by doing:&lt;/p&gt;

&lt;pre&gt;bramp@Andrew-laptop:~$ sudo update-grub2
Generating grub.cfg ...
Found Debian background: moreblue-orbit-grub.png
Found linux image: /boot/vmlinuz-2.6.30-1-amd64
Found initrd image: /boot/initrd.img-2.6.30-1-amd64
Found Microsoft Windows XP Professional on /dev/sda1
done
&lt;/pre&gt;

&lt;p&gt;When you reboot you should now have Windows on your boot menu.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>