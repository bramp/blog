<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Opensource-projects on bramp.net</title>
    <link>http://localhost:1313/opensource-project/</link>
    <description>Recent content in Opensource-projects on bramp.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sat, 16 Feb 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/opensource-project/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Open Source Projects</title>
      <link>http://localhost:1313/opensource-project/</link>
      <pubDate>Sat, 16 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/opensource-project/</guid>
      <description>&lt;p&gt;I&amp;#8217;ve always been a big fan of open source, and always try and contribute where I can. In addition over the years I have created multiple small projects that I give back to the community. Here are the ones I have on GitHub:&lt;/p&gt;

&lt;!-- TODO Change this to be data driven --&gt;

&lt;table width=&#34;100%&#34; class=&#34;opensource&#34;&gt;
  &lt;tr&gt;
    &lt;td width=&#34;33%&#34; valign=&#34;top&#34;&gt;
      &lt;p&gt;
        &lt;b&gt;&lt;a href=&#34;https://github.com/bramp/libcec-daemon&#34;&gt;libcec-daemon&lt;/a&gt; &amp;#8211; c++ libcec uinput&lt;/b&gt;&lt;br /&gt; A Linux daemon for connecting libcec to uinput. That is, using your TV to control your PC over HDMI!
      &lt;/p&gt;
      
      &lt;p&gt;
        &lt;b&gt;&lt;a href=&#34;https://github.com/bramp/threadnetperf&#34;&gt;threadnetperf&lt;/a&gt; &amp;#8211; c epoll&lt;/b&gt;&lt;br /&gt; A highly customisable high performance multi-threaded network benchmarking tool. This tool was able to max out 20Gbit/s of bandwidth using commodity multi-core hardware. This supported &lt;a href=&#34;http://localhost:1313/publication/2009-05-26-evaluating-the-performance-of-network-protocol-processing-on-multi-core-systems/&#34;&gt;research&lt;/a&gt; that existing &lt;a href=&#34;http://www.netperf.org/&#34;&gt;benchmarking tools&lt;/a&gt; were unable to.&lt;/i&gt;
      &lt;/p&gt;
      
      &lt;p&gt;
        &lt;b&gt;&lt;a href=&#34;https://github.com/bramp/js-sequence-diagrams&#34;&gt;js-sequence-diagrams&lt;/a&gt; &amp;#8211; javascript&lt;/b&gt;&lt;br /&gt; Draws simple SVG sequence diagrams from textual representation of the diagram.
      &lt;/p&gt;
      
      &lt;p&gt;
        &lt;b&gt;&lt;a href=&#34;https://github.com/bramp/hessian.js&#34;&gt;hessian.js&lt;/a&gt; &amp;#8211; node.js javascript&lt;/b&gt;&lt;br /&gt; Node.js support for the &lt;a href=&#34;http://hessian.caucho.com/&#34;&gt;Hessian&lt;/a&gt; binary web service protocol written in pure javascript. This was implemented to interface with a legacy Java service. Hessian.js is available from &lt;a href=&#34;https://npmjs.org/package/hessian&#34;&gt;npm&lt;/a&gt;.
      &lt;/p&gt;
      
      &lt;p&gt;
        &lt;b&gt;&lt;a href=&#34;https://github.com/bramp/handy-tools&#34;&gt;handy-tools&lt;/a&gt; &amp;#8211; python&lt;/b&gt;&lt;br /&gt; A collection of helpful cli tools written in python. Create histograms from raw data, create heatmaps of performance, or monitor applications with ease.
      &lt;/p&gt;
    &lt;/td&gt;
    
    &lt;td width=&#34;33%&#34; valign=&#34;top&#34;&gt;
      &lt;p&gt;
        &lt;b&gt;&lt;a href=&#34;https://github.com/bramp/protoc-gen-php&#34;&gt;protoc-gen-php&lt;/a&gt; &amp;#8211; c++ protobuf php&lt;/b&gt;&lt;br /&gt; A PHP Protocol Buffer Generator Plugin for protoc.
      &lt;/p&gt;
      
      &lt;p&gt;
        &lt;b&gt;&lt;a href=&#34;https://github.com/bramp/nodewii&#34;&gt;nodewii&lt;/a&gt; &amp;#8211; c++ node.js wii&lt;/b&gt;&lt;br /&gt; Bindings for node.js to speak to a Wiimote. This includes a socket.io demo, of the Wiimote controlling a webpage in realtime. Read the &lt;a href=&#34;http://localhost:1313/post/2011-10-17-my-experiences-with-developing-multi-threaded-nodejs-extensions/&#34; title=&#34;My experiences with developing multi-threaded nodejs addon&#34;&gt;blog article&lt;/a&gt;, or view my &lt;a href=&#34;http://localhost:1313/post/2014-12-21-nationjs-talk-on-nodejs-now-on-vimeo/&#34; title=&#34;NationJS talk&#34;&gt;NationJS talk&lt;/a&gt;
      &lt;/p&gt;
      
      &lt;p&gt;
        &lt;b&gt;&lt;a href=&#34;https://github.com/bramp/jambox&#34;&gt;jambox&lt;/a&gt; &amp;#8211; c&lt;/b&gt;&lt;br /&gt; A Linux implementation of the protocol used to communicate with the &lt;a href=&#34;https://jawbone.com/speakers/jambox/overview&#34;&gt;Jambox by Jawbone&lt;/a&gt;. This was reverse engineered from the Bluetooth protocol the official Windows application used.
      &lt;/p&gt;
      
      &lt;p&gt;
        &lt;b&gt;&lt;a href=&#34;https://github.com/bramp/libmintchip&#34;&gt;libmintchip&lt;/a&gt; &amp;#8211; c&lt;/b&gt;&lt;br /&gt; Unofficial C library for interfacing with &lt;a href=&#34;http://mintchipchallenge.com/&#34;&gt;MintChips&lt;/a&gt; &amp;#8211; Unfinished, and mostly an exercise in reverse engineering a protocol.
      &lt;/p&gt;
      
      &lt;p&gt;
        &lt;b&gt;&lt;a href=&#34;https://github.com/bramp/Connected-component-labelling&#34;&gt;Connected-component-labelling&lt;/a&gt; &amp;#8211; javascript&lt;/b&gt;&lt;br /&gt; Simple JavaScript library that does connected-component labelling (aka blob extraction). It uses the Algorithm described in the paper &amp;#8220;A linear-time component labelling algorithm using contour tracing technique&amp;#8221;. This is useful for Computer Vision problems, such as identifying objects in a photo. Originally written to support a JavaScript sudoku solver (that solves directly from a photo of a puzzle).
      &lt;/p&gt;
    &lt;/td&gt;
    
    &lt;td width=&#34;33%&#34; valign=&#34;top&#34;&gt;
      &lt;p&gt;
        &lt;b&gt;&lt;a href=&#34;https://github.com/bramp/p2psim&#34;&gt;p2psim&lt;/a&gt; &amp;#8211; java&lt;/b&gt;&lt;br /&gt; A peer-to-peer distributed hash table (DHT) simulator. This was created to support some of my &lt;a href=&#34;http://localhost:1313/tags/stealthdht&#34;&gt;distributed systems research&lt;/a&gt; simulating 1000 node networks.
      &lt;/p&gt;
      
      &lt;p&gt;
        &lt;b&gt;&lt;a href=&#34;https://github.com/bramp/ByteTorrent&#34;&gt;ByteTorrent&lt;/a&gt; &amp;#8211; c++&lt;/b&gt;&lt;br /&gt; A pure C++ implementation of the BitTorrent protocol. This was a project I wrote 11 years ago, and was used by atleast one complete BitTorrent client.
      &lt;/p&gt;
      
      &lt;p&gt;
        &lt;b&gt;&lt;a href=&#34;https://github.com/bramp/php5-spotify&#34;&gt;php5-spotify&lt;/a&gt; &amp;#8211; php c&lt;/b&gt;&lt;br /&gt; This is a simple PHP extension that wraps some of the functionality of the C library &lt;a href=&#34;https://developer.spotify.com/technologies/libspotify/&#34;&gt;libspotify&lt;/a&gt;.
      &lt;/p&gt;
      
      &lt;p&gt;
        &lt;b&gt;&lt;a href=&#34;https://github.com/bramp/ndsfs&#34;&gt;ndsfs&lt;/a&gt; &amp;#8211; c fuse&lt;/b&gt;&lt;br /&gt; A FUSE application to mount Nintendo DS roms,
      &lt;/p&gt;
      
      &lt;p&gt;
        &lt;b&gt;&lt;a href=&#34;https://github.com/bramp/us-census-tools&#34;&gt;us-census-tools&lt;/a&gt; &amp;#8211; php&lt;/b&gt;&lt;br /&gt; A collection of scripts I&amp;#8217;ve written to handle US Census data. For example, importing the American Community Survey (ACS) data into various databases, or converting the Census TIGER/LineÂ® Shapefiles so they can easily be displayed on maps.
      &lt;/p&gt;
      
      &lt;p&gt;
        &lt;b&gt;&lt;a href=&#34;https://github.com/bramp/jPsyScript&#34;&gt;jPsyScript&lt;/a&gt; &amp;#8211; java objective-C&lt;/b&gt;&lt;br /&gt; A java implementation of &lt;a href=&#34;http://www.psych.lancs.ac.uk/people/simon-slavin&#34;&gt;PsyScript&lt;/a&gt; a simple programming languge for psychologists to run experiments. The original version was written in Objective-C, and I reimplementation in Java so it was portable, and could be run from within a webpage.
      &lt;/p&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;As well as creating projects, I have made contributions to at least the following projects:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.kernel.org/&#34;&gt;Linux Kernel&lt;/a&gt;, &lt;a href=&#34;http://www.freebsd.org/&#34;&gt;FreeBSD&lt;/a&gt;, &lt;a href=&#34;http://php.net/&#34;&gt;PHP&lt;/a&gt;, &lt;a href=&#34;http://www.python.org/&#34;&gt;Python&lt;/a&gt;, &lt;a href=&#34;http://redis.io/&#34;&gt;Redis&lt;/a&gt;, &lt;a href=&#34;http://www.nih.at/libzip/&#34;&gt;libzip&lt;/a&gt;, &lt;a href=&#34;http://www.read.cs.ucla.edu/click/click&#34;&gt;Click&lt;/a&gt;, &lt;a href=&#34;http://www.chromium.org/&#34;&gt;Chromium&lt;/a&gt;, &lt;a href=&#34;https://github.com/bramp/archivemount&#34;&gt;archivemount&lt;/a&gt;, &lt;a href=&#34;https://github.com/bramp/NanoHTTPd&#34;&gt;NanoHTTPd&lt;/a&gt; and more I just don&amp;#8217;t remember.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>